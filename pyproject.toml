# black
[tool.black]
line-length = 80
skip-string-normalization=true
include = '''
    \.pyi?$
'''
exclude = '''
/(
    \.git
  | \.mypy_cache
  | \.tox
  | \.venv
  | .local
  | _build
  | __init__.py
  | .local
  | examples
  | node_modules
  | waldiez_out
  | packages
  | package_templates
)/
'''

# mypy
[tool.mypy]
files = 'scripts/**/*.py'
show_error_codes = true
# xcode/dmypy: follow-imports=silent not supported
# follow_imports = 'skip'
platform = 'linux'
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_subclassing_any = false
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
ignore_missing_imports = false
no_implicit_reexport = true
strict_optional = true
warn_redundant_casts = true
warn_unused_configs = true
warn_unused_ignores = true
plugins = []
exclude = [
    '.venv',
    '.local',
    '.yarn',
    'examples',
    'node_modules',
    'waldiez_out',
]

# isort
[tool.isort]
profile ='black'
skip=[
    '.venv',
    '.local',
    'examples',
    'node_modules',
    'waldiez_out',
]
include_trailing_comma=true
force_grid_wrap=0
use_parentheses=true
line_length=80

# pydocstyle
[tool.pydocstyle]
match-dir='([^!(.venv)].*)([^!(.local)].*)([^!(examples)].*)([^!(node_modules)].*)([^!(waldiez_out)].*)'

# pylint
[tool.pylint.master]
load-plugins = [
    'pylint.extensions.mccabe',
    'pylint.extensions.redefined_variable_type',
    'pylint.extensions.broad_try_clause',
    'pylint.extensions.no_self_use',
    'pylint.extensions.docparams',
]
source-roots = [
    'packages/core/python',
    'packages/studio',
    'packages/jupyter',
    'package_templates/python_only',
    'package_templates/both',
]

extension-pkg-whitelist= []
# reports=true
recursive=true
fail-under=8.0
ignore=['CVS']
ignore-patterns = [
    '.venv/*',
    '.local/*',
    'examples/*',
    'node_modules/*',
    'waldiez_out/*',
    'requirements.py',
]
unsafe-load-any-extension='no'

[tool.pylint.messages_control]
enable=['c-extension-no-member']
[tool.pylint.format]
max-line-length=80
[tool.pylint.similarities]
ignore-imports='yes'
ignore-signatures='yes'
min-similarity-lines=11
[tool.pylint.broad_try_clause]
max-try-statements=3
[tool.pylint.design]
max-args=11
max-attributes=11
max-positional-arguments=11
max-statements=50
[tool.pylint.string]
check-quote-consistency = true
check-str-concat-over-line-jumps = true
[tool.pylint.parameter_documentation]
accept-no-param-doc=false
accept-no-raise-doc=false
accept-no-return-doc=false
accept-no-yields-doc=false
# Possible choices: ['sphinx', 'epytext', 'google', 'numpy', 'default']
default-docstring-type = 'numpy'

# bandit
[tool.bandit]
exclude_dirs = [
    '.venv',
    '.local',
    'examples',
    'node_modules',
    'waldiez_out',
]
# B104: bind to all interfaces (0.0.0.0)
# B110: allow pass on try/except
# B404: allow import subprocess
# B602, B603: allow shell=True (subprocess,popen)
skips = ['B104', 'B110', 'B404', 'B602', 'B603' ]
[tool.bandit.assert_used]
skips = ['*_test.py', '*/test_*.py']

# ruff
[tool.ruff]
line-length = 80
extend-exclude = [
    '.venv',
    '.local',
    'examples',
    'node_modules',
    'waldiez_out',
    'packages',
    'package_templates',
]

[tool.ruff.lint]
select = ['E4', 'E7', 'E9', 'F', 'Q']
ignore = []
# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ['ALL']
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = '^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$'

[tool.ruff.format]
# exclude = ['*.pyi', '*.j2']
quote-style = 'double'
indent-style = 'space'
skip-magic-trailing-comma = false
line-ending = 'lf'
